security:
    role_hierarchy:
        ROLE_USER: [ROLE_USER, ROLE_SONATA_ADMIN]
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    encoders:
        App\Entity\Users: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users:
            id: App\Security\UserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        user:
            pattern: /user(.*)
            form_login:
                provider: users
                login_path: user_login
                use_forward: false
                check_path: user_login
                failure_path: null
            logout:
                path: user_logout
                target: user_login
            anonymous: true
            guard:
                authenticators:
                    - App\Security\UserLoginAuthenticator
        admin:
            pattern:            /admin(.*)
            form_login:
                provider:       users
                login_path:     admin_login
                use_forward:    false
                check_path:     admin_login
                failure_path:   null
                # default_target_path: check_2fa
                # always_use_default_target_path: true
            logout:
                path:           admin_logout
                target:         admin_login
            anonymous:          true
            guard:
                authenticators:
                    - App\Security\AdminLoginAuthenticator
        main:
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/user/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/, role: [ROLE_USER, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/2fa/check, role: ROLE_USER }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        # Admin login page needs to be accessed without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/dashboard, role: ROLE_ADMIN }
        - { path: ^/admin/app, role: ROLE_ADMIN }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/2fa, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }
        - { path: ^/admin/2fa/check, role: ROLE_ADMIN }
