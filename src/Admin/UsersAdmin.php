<?php


namespace App\Admin;


use App\Entity\Users;
use Sonata\AdminBundle\Admin\AbstractAdmin;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Form\FormMapper;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\HiddenType;
use Symfony\Component\Form\Extension\Core\Type\TextType;


final class UsersAdmin extends AbstractAdmin
{


    public function __construct(string $code, string $class, string $baseControllerName, \Swift_Mailer $mailer)
    {
        parent::__construct($code, $class, $baseControllerName);
        $this->mailer = $mailer;





    }


    protected function configureFormFields(FormMapper $form)
    {


        $form->add('name',TextType::class,[
            'label'=>'Nom'
        ]);
        $form->add('firstname',TextType::class,[
            'label'=>'Prénom'
        ]);
        $form->add('email',TextType::class);
        $form->add('city',TextType::class,[
            'label'=>'Ville'
        ]);
        $form->add('roles',HiddenType::class,[
            'data'=>'ROLE_USER'
        ]);

    }

    protected function configureDatagridFilters(DatagridMapper $datagridMapper)
    {
        $datagridMapper->add('name',null,['label'=>'Nom']);
        $datagridMapper->add('firstname',null,['label'=>'Prénom']);
        $datagridMapper->add('email');
        $datagridMapper->add('city',null,['label'=>'Ville']);
    }

    protected function configureListFields(ListMapper $listMapper)
    {
        $listMapper->addIdentifier('name',null,['label'=>'Nom']);
        $listMapper->add('firstname',null,['label'=>'Prénom']);
        $listMapper->add('email');
        $listMapper->add('city',null,['label'=>'Ville']);
    }


    public function toString($object)
    {
        return $object instanceof Users
            ? $object->getEmail()
            : 'User';
    }

    public function postPersist($object)
    {
        parent::postPersist($object); // TODO: Change the autogenerated stub
        $bytes = random_bytes(5);
        $key = bin2hex($bytes);
        $hashKey = sha1($key);
        $email = $this->getForm()->get('email')->getData();
        $hashMail = sha1($email);

        $body = '<a href="localhost:8000/user/addPassword/'.$hashKey.'/'.$hashMail.'" target="_blank">Créer mot de passe</a><p>'.$key.'</p>';
        $message = (new \Swift_Message('Hello'))
            ->setFrom('admin@greenworld.com')
            ->setTo($email)
            ->setBody($body

            );


        $this->mailer->send($message);


    }

    public function prePersist($object)
    {
        parent::prePersist($object); // TODO: Change the autogenerated stub
        $date = new \DateTime();
        $date->setTimezone(new \DateTimeZone('Europe/Paris'));
        $date->format('Y-m-d H:i:s (e)');
        $object->setdateCreation($date);
    }

}